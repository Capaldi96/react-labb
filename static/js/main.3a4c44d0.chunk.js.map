{"version":3,"sources":["components/Welcome.jsx","components/PeopleList.jsx","components/Favorites.jsx","components/PlanetList.jsx","components/DetailedView.jsx","components/Create.jsx","App.js","serviceWorker.js","index.js"],"names":["Welcome","changeScreen","className","onClick","PeopleList","setFavoritePeople","favoritePeople","useState","error","setError","isLoaded","setIsLoaded","peopleList","setPeopleList","searchValue","setSearchValue","filteredList","setFilteredList","useEffect","mounted","a","axios","result","data","results","count","next","concat","console","log","fetchData","cards","map","item","index","key","name","height","eye_color","skin_color","e","event","stopPropagation","includes","addToFav","type","placeholder","onChange","filter","toLowerCase","target","value","Favorites","favoritePlanets","setFavoritePlanets","list","setList","filteredPeople","setFilteredPeople","filteredPlanets","setFilteredPlanets","combinedList","setCombinedList","filteredCombined","setFilteredCombined","detailedHandler","person","removeFavPeople","param","array","removeFavPlanets","planet","peopleCards","planetCards","climate","terrain","population","combinedCards","length","PlanetList","planetList","setPlanetList","DetailedView","homeWorld","setHomeWorld","movies","setMovies","homeworld","fetchHomeWorld","i","films","title","fetchMovies","movieList","movie","birth_year","hair_color","gender","mass","diameter","gravity","orbital_period","rotation_period","surface_water","Create","setName","skinColor","setSkinColor","eyeColor","setEyeColor","setHeight","touched","setTouched","isDisabled","cssClass","onBlur","App","currentScreen","setCurrentScreen","detailedPerson","setDetailedPerson","content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3a4c44d0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Welcome = ({changeScreen}) => {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"welcome-screen\">\n                <h1>Welcome!</h1>\n                <p>Press the button to get started! </p>\n                <button className=\"welcome-button\" onClick={changeScreen}>Get Started</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst PeopleList = ({changeScreen, setFavoritePeople, favoritePeople}) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [peopleList, setPeopleList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [filteredList, setFilteredList] = useState([])\n\n\n    const handleSearchValue = (e) => {\n        const results = peopleList.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.eye_color.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredList(results);\n        setSearchValue(e.target.value);\n    };\n    \n    const addToFav = (event, item) => {\n        event.stopPropagation();\n        if(!favoritePeople.includes(item))\n        setFavoritePeople(item);\n    }\n    const detailedHandler = (person) =>{\n        changeScreen(person);\n    }\n\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchData = async () =>{\n            try{\n                let result = await axios(`https://swapi.dev/api/people/`)\n                if(!mounted) return;\n                setPeopleList(result.data.results);\n                setFilteredList(result.data.results)\n                let count = 2;\n                while(result.data.next !== null){\n                    result = await axios(`https://swapi.dev/api/people/?page=${count}`)\n                    if( !mounted) return;\n                    setPeopleList(peopleList => peopleList.concat(result.data.results));\n                    setFilteredList(filteredList => filteredList.concat(result.data.results))\n                    count++;\n                }\n            } catch(e){\n                setError(e);\n                console.log(e)\n            }\n            setIsLoaded(false);\n        }\n        fetchData();\n        return () => {\n            mounted = false;\n        };\n    },[])\n    const cards = filteredList.map((item, index) =>(\n        <div className=\"card\" key={item.name+index} onClick={() => detailedHandler(item)}> \n            <h2>{item.name}</h2>\n            <p>Height: {item.height} cm</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Skin color: {item.skin_color}</p>\n            <button onClick={(e)=>addToFav(e,item)}>Add to favorites</button>\n            {/* <button onClick={()=>removeFav(index+1)}>Remove fromfavorites</button> */}\n        </div>\n    ))\n\n    if(error)\n        return <div>{error}</div>\n\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else\n\n    return (\n        \n        <div className=\"list-component\">\n            <div className=\"search-wrapper\">\n                <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, eye color or skin color\" onChange={handleSearchValue} value={searchValue} />\n            </div>\n            <h2>All People</h2>\n            <div className=\"gallery\">{cards}</div>\n        </div>\n    )\n}\n\nexport default PeopleList;\n","import React, {useState, useEffect} from 'react'\n\nconst Favorites = ({changeScreen, favoritePeople, favoritePlanets, setFavoritePeople, setFavoritePlanets}) => {\n    const [isLoaded, setIsLoaded] = useState(true);\n    const [list, setList] = useState('all')\n    const [filteredPeople, setFilteredPeople] = useState([]);\n    const [filteredPlanets, setFilteredPlanets] = useState([]);\n    const [combinedList, setCombinedList] = useState([]);\n    const [filteredCombined, setFilteredCombined] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    \n    useEffect(()=>{\n        setFilteredPeople(...filteredPeople, favoritePeople);\n        setFilteredPlanets(...filteredPlanets, favoritePlanets);\n        setCombinedList([...favoritePeople, ...favoritePlanets]);\n        setFilteredCombined([...favoritePeople, ...favoritePlanets]);\n        setIsLoaded(false);\n    },[favoritePeople, favoritePlanets, filteredPeople, filteredPlanets])\n    \n\n    const detailedHandler = (person) =>{\n        changeScreen(person);\n    }\n\n    const searchPeople = (e) => {\n        const results = favoritePeople.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.eye_color.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredPeople(results);\n        setSearchValue(e.target.value);\n    };\n    const searchPlanets = (e) => {\n        const results = favoritePlanets.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredPlanets(results);\n        setSearchValue(e.target.value);\n    };\n    const searchBoth = (e) => {\n        const results = combinedList.filter(item => {\n            console.log(item)\n            if(item.skin_color)\n                return (\n                    item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                    item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                    item.eye_color.toLowerCase().includes(e.target.value.toLowerCase())\n                )\n            else return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            )\n        });\n        setFilteredCombined(results);\n        setSearchValue(e.target.value);\n    };\n    const removeFavPeople = (event,param) => {\n        event.stopPropagation();\n        let array = favoritePeople.filter(person => person.name !== param.name)\n        setFilteredPeople(array);\n        setFavoritePeople(array);\n        let filter = combinedList.filter(person => person.name !== param.name)\n        setFilteredCombined(filter)\n        setCombinedList(filter)\n    }\n    \n    const removeFavPlanets = (event,param) => {\n        event.stopPropagation();\n        let array = favoritePlanets.filter(planet => planet.name !== param.name)\n        setFavoritePlanets(array);\n        setFilteredPlanets(array);\n        let filter = combinedList.filter(planet => planet.name !== param.name)\n        setFilteredCombined(filter)\n        setCombinedList(filter)\n    }\n\n    const peopleCards = filteredPeople.map((item, index) =>(\n        <div className=\"card\" key={item.name} onClick={() => detailedHandler(item)}>\n            <h2>{item.name}</h2>\n            <p>Height: {item.height}</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Skin color: {item.skin_color}</p>\n            <button onClick={(e)=>removeFavPeople(e,item)}>Remove from favorites</button>\n        </div>\n    ))\n    const planetCards = filteredPlanets.map((item) =>(\n        <div className=\"card\" key={item.name}>\n            <h2>{item.name}</h2>\n            <p>Climate: {item.climate}</p>\n            <p>Terrain: {item.terrain}</p>\n            <p>Population: {item.population}</p>\n            <button onClick={(e)=>removeFavPlanets(e,item)}>Remove from favorites</button>\n\n        </div>\n    ));\n\n    const combinedCards = filteredCombined.map((item) =>{\n        if(item.terrain) return (\n            <div className=\"card\" key={item.name}>\n                <h2>{item.name}</h2>\n                <p>Climate: {item.climate}</p>\n                <p>Terrain: {item.terrain}</p>\n                <p>Population: {item.population}</p>\n                <button onClick={(e)=>removeFavPlanets(e,item)}>Remove from favorites</button>\n            </div>\n        )\n        else return (\n            <div className=\"card\" key={item.name} onClick={() => detailedHandler(item)}>\n            <h2>{item.name}</h2>\n            <p>Height: {item.height} cm</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Skin color: {item.skin_color}</p>\n            <button onClick={(e)=>removeFavPeople(e,item)}>Remove from favorites</button>\n            </div>\n        )\n    });\n\n    \n    \n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n\n    else if(favoritePeople.length === 0 && favoritePlanets.length === 0)\n    return (\n        <div className=\"list-component\">\n            <h1>You currently have no favorites</h1>\n        </div>\n    )\n    \n    else {\n        if(list === 'people' )\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, eye color or skin color\" onChange={searchPeople} value={searchValue} />\n                    </div>\n                    <h1>Your favorite</h1>\n                    <div>\n                        <h2>People</h2>\n                        <div className=\"gallery\">{peopleCards}</div>\n                    </div>\n                </div>\n            )\n        else if(list === 'planets')\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, terrain or climate\" onChange={searchPlanets} value={searchValue} />\n                    </div>\n                    <h1>Your favorites</h1>\n                    <div>\n                        <h2>Planets</h2>\n                        <div className=\"gallery\">{planetCards}</div>\n                    </div>\n                </div>\n            )\n        else if(list === 'all')\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on character name, eye color, skin color, planet name, terrain or climate\" onChange={searchBoth} value={searchValue} />\n                    </div>\n                    <h1>Your favorites</h1>\n                    <div>\n                        <h2>People & Planets</h2>\n                        <div className=\"gallery\">{combinedCards}</div>\n                        </div>\n                </div>\n            )\n    }\n}\n\nexport default Favorites\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst PlanetList = ({setFavoritePlanets, favoritePlanets, changeScreen}) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [planetList, setPlanetList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [filteredList, setFilteredList] = useState([])\n\n    const handleSearchValue = (e) => {\n        const results = planetList.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredList(results);\n        setSearchValue(e.target.value);\n    };\n    const detailedHandler = (planet) =>{\n        changeScreen(planet);\n\n    }\n    \n    const addToFav = (event, planet) => {\n        event.stopPropagation();\n        if(!favoritePlanets.includes(planet))\n        setFavoritePlanets(planet);\n    }\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchData = async () =>{\n            try{\n                let result = await axios(`https://swapi.dev/api/planets/`)\n                if(!mounted) return;\n                setPlanetList(result.data.results);\n                setFilteredList(result.data.results)\n                let count = 2;\n                while(result.data.next !== null){\n                    result = await axios(`https://swapi.dev/api/planets/?page=${count}`)\n                    if(!mounted) return;\n                    setPlanetList([...planetList, result.data.results]);\n                    setFilteredList([...filteredList, result.data.results]);\n                    count++;\n                }\n            } catch(e){\n                setError(e);\n            }\n            setIsLoaded(false);\n        }\n        fetchData();\n        return () => {\n            mounted = false;\n        };\n    },[filteredList, planetList])\n    const cards = filteredList.map((item, index) =>(\n        <div className=\"card\" key={item.name+index} onClick={()=>detailedHandler(item)}>\n            <section>\n                <h2>{item.name}</h2>\n                <p>Climate: {item.climate}</p>\n                <p>Terrain: {item.terrain}</p>\n                <p>Population: {item.population}</p>\n            </section>        \n            <button onClick={(e)=>addToFav(e,item)}>Add to favorites</button>\n        </div>\n    ))\n\n    if(error)\n        return <div>{error}</div>\n\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else\n        return (\n            <div className=\"list-component\">\n                <div className=\"search-wrapper\">\n                    <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, climate or terrain\" onChange={handleSearchValue} value={searchValue} />\n                </div>\n                <h2>All Planets</h2>\n                <div className=\"gallery\">{cards}</div>\n            </div>\n        )\n}\n\nexport default PlanetList;\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nconst DetailedView = ({person}) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState();\n    const [homeWorld, setHomeWorld] = useState(null);\n    const [movies, setMovies] = useState([]);\n    console.log(person)\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchHomeWorld = async () =>{  \n            if(person.homeworld){ \n                try{     \n                    let result = await axios(person.homeworld);\n                    if(!mounted) return;\n                    setHomeWorld(result.data.name)\n                }\n                catch(e){\n                    setError(e);\n                    console.log(error)\n                }\n                setIsLoaded(false);\n            }\n        }\n        fetchHomeWorld();\n        return () => {\n            mounted = false;\n        };\n    },[error, person.homeworld])\n    useEffect(()=>{\n        let mounted = true;\n        const fetchMovies = async () =>{   \n            try{     \n                for(let i = 0; i < person.films.length; i++){ \n                    let result = await axios(person.films[i]);\n                    if(!mounted) return;\n                    setMovies(movies => movies.concat(result.data.title));\n                }\n            }\n            catch(e){\n                setError(e);\n            }\n            setIsLoaded(false);\n        }\n        fetchMovies();\n        return () => {\n            mounted = false;\n        };\n    },[person.films])\n\n    const movieList = movies.map(movie =>(\n        <p key={movie}>{movie}</p>\n    ))\n    if(error)\n        return <div>{error}</div>\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else{\n        if(person.height)\n            return (\n            <div className=\"detailed-card\">\n                <h2>{person.name}</h2>\n                <div className=\"detailed-grid\">\n                    <div>Birth year: <p>{person.birth_year}</p></div>\n                    <div>Height: <p>{person.height} cm</p></div>\n                    <div>Hair color: <p>{person.hair_color}</p></div>\n                    <div>Eye color: <p>{person.eye_color}</p></div>\n                    <div>Skin color: <p>{person.skin_color}</p></div>\n                    <div>Gender: <p>{person.gender}</p></div>\n                    <div>Mass: <p>{person.mass} kg</p></div>\n                    <div>Homeworld: <p>{homeWorld}</p></div>\n                    <div>Movies: <div>{movieList}</div></div>\n                </div>\n                \n            </div>\n        )\n        else return (\n            <div className=\"detailed-card\">\n            <h2>{person.name}</h2>\n            <div className=\"detailed-grid\">\n                <div>Climate: <p>{person.climate}</p></div>\n                <div>Diameter: <p>{person.diameter}</p></div>\n                <div>Gravity: <p>{person.gravity}</p></div>\n                <div>Orbital period: <p>{person.orbital_period}</p></div>\n                <div>Population: <p>{person.population}</p></div>\n                <div>Rotation period: <p>{person.rotation_period}</p></div>\n                <div>Surface water: <p>{person.surface_water}</p></div>\n                <div>Terrain: <p>{person.terrain}</p></div>\n                <div>Movies: <div>{movieList}</div></div>\n            </div>\n            \n        </div>\n        )\n    }\n}\nexport default DetailedView;\n","import React, {useState} from 'react'\n\nconst Create = ({setFavoritePeople}) => {\n    const [name, setName] = useState('');\n    const [skinColor, setSkinColor] = useState('');\n    const [eyeColor, setEyeColor] = useState('');\n    const [height, setHeight] = useState('');\n    const [touched, setTouched] = useState(false);\n    const [isDisabled, setIsDisabled] = useState(true);\n\n\n    let cssClass = '';\n\n    \n    const submitHandler = () =>{\n        \n        let newCharacter = [{\n            name: name,\n            skin_color: skinColor,\n            eye_color: eyeColor,\n            height: height\n        }];\n        setFavoritePeople(newCharacter)\n    }\n\n    if( touched ) {\n        if( isDisabled )\n            cssClass = 'valid';\n        else\n            cssClass = 'invalid';\n    }\n    return (\n        <div className=\"create-box\">\n            <h2>Create your own favorite character</h2>\n            <div>\n                Name: \n                <input type=\"text\"\n                    value={name}\n                    className={cssClass}\n                    onChange={event => setName(event.target.value)}\n                    onBlur={event => setTouched(true)} /> <br/>\n            </div>\n            <div>\n                Skin color: \n                <input type=\"text\"\n                    value={skinColor}\n                    className={cssClass}\n                    onChange={event => setSkinColor(event.target.value)}\n                    onBlur={event => setTouched(true)} /> <br/>\n            </div>\n            <div>\n                Eye color: \n                <input type=\"text\"\n                    value={eyeColor}\n                    className={cssClass}\n                    onChange={event => setEyeColor(event.target.value)}\n                    onBlur={event => setTouched(true)} /> <br/>\n            </div>\n            <div>\n                Height (cm): \n                <input type=\"text\"\n                    value={height}\n                    className={cssClass}\n                    onChange={event => setHeight(event.target.value)}\n                    onBlur={event => setTouched(true)} /> <br/>\n            </div>\n            <button onClick={()=> submitHandler()}>Submit</button>\n        </div>\n    )\n}\nexport default Create;\n","import React, {useState} from 'react';\nimport Welcome from './components/Welcome'\nimport './App.css';\nimport PeopleList from './components/PeopleList';\nimport Favorites from './components/Favorites';\nimport PlanetList from './components/PlanetList';\nimport DetailedView from './components/DetailedView';\nimport Create from './components/Create';\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('peopleScreen');\n  const [detailedPerson, setDetailedPerson] = useState(null);\n  const [favoritePeople, setFavoritePeople] = useState([]);\n  const [favoritePlanets, setFavoritePlanets] = useState([]);\n\n  let content= null;\n  switch(currentScreen){\n    case 'welcomeScreen':\n      content = (\n        <Welcome changeScreen={() => setCurrentScreen('peopleScreen')}></Welcome>\n      )\n      break;\n    case 'peopleScreen':\n      content = (\n        <PeopleList changeScreen={(param) => {setCurrentScreen('detailedScreen'); setDetailedPerson(param)}} setFavoritePeople={(person) => {setFavoritePeople(favoritePeople => favoritePeople.concat(person))}} favoritePeople={favoritePeople}></PeopleList>\n      )\n      break;\n    case 'favoriteScreen':\n      content = (\n        <Favorites changeScreen={(param) => {setCurrentScreen('detailedScreen'); setDetailedPerson(param)}} favoritePeople={favoritePeople} favoritePlanets={favoritePlanets} setFavoritePeople={(param) => {setFavoritePeople(param)}} setFavoritePlanets={(planet) => {setFavoritePlanets(planet)}} ></Favorites>\n      )\n      break;\n    case 'planetScreen':\n      content = (\n        <PlanetList changeScreen={(param) => {setCurrentScreen('detailedScreen'); setDetailedPerson(param)}} setFavoritePlanets={(planet) => {setFavoritePlanets(favoritePlanets =>  favoritePlanets.concat(planet))}} favoritePlanets={favoritePlanets}></PlanetList>\n      )\n      break;\n    case 'detailedScreen':\n      content = (\n        <DetailedView person={detailedPerson}></DetailedView>\n      )\n      break;\n    case 'createScreen':\n        content = (\n          <Create setFavoritePeople={(person) => {setFavoritePeople(favoritePeople => favoritePeople.concat(person))}}></Create>\n        )\n        break;\n    default:\n      break;\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"nav-bar\">\n        <button onClick={() => setCurrentScreen('favoriteScreen')}>My favorites</button>\n        <button onClick={() => setCurrentScreen('peopleScreen')}>List people </button>\n        <button onClick={() => setCurrentScreen('planetScreen')}>List planets </button>\n        <button onClick={() => setCurrentScreen('createScreen')}>Add</button>\n        </div>\n      </header>\n      <main>\n        {content}\n      </main>\n      <span></span>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}