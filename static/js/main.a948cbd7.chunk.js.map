{"version":3,"sources":["components/Welcome.jsx","components/PeopleList.jsx","components/Favorites.jsx","components/PlanetList.jsx","components/DetailedView.jsx","components/Create.jsx","App.js","serviceWorker.js","index.js"],"names":["Welcome","changeScreen","className","onClick","PeopleList","setFavoritePeople","useState","error","setError","isLoaded","setIsLoaded","peopleList","setPeopleList","searchValue","setSearchValue","filteredList","setFilteredList","useEffect","mounted","a","axios","result","data","results","count","next","concat","console","log","fetchData","cards","map","item","index","key","name","birth_year","eye_color","hair_color","e","event","stopPropagation","addToFav","type","placeholder","onChange","filter","toLowerCase","includes","target","value","skin_color","Favorites","favoritePeople","favoritePlanets","setFavoritePlanets","list","setList","filteredPeople","setFilteredPeople","filteredPlanets","setFilteredPlanets","combinedList","setCombinedList","filteredCombined","setFilteredCombined","detailedHandler","person","removeFavPeople","param","array","removeFavPlanets","planet","peopleCards","planetCards","climate","terrain","population","combinedCards","length","PlanetList","planetList","setPlanetList","DetailedView","homeWorld","setHomeWorld","movies","setMovies","homeworld","fetchHomeWorld","i","films","title","fetchMovies","movieList","movie","height","gender","mass","Create","x","created","setCreated","touched","setTouched","cssClass","isNaN","onBlur","App","currentScreen","setCurrentScreen","detailedPerson","setDetailedPerson","content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a948cbd7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Welcome = ({changeScreen}) => {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"welcome-screen\">\n                <h1>Welcome!</h1>\n                <p>Press the button to get started! </p>\n                <button className=\"welcome-button\" onClick={changeScreen}>Get Started</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst PeopleList = ({changeScreen, setFavoritePeople}) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [peopleList, setPeopleList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [filteredList, setFilteredList] = useState([])\n\n\n    const handleSearchValue = (e) => {\n        const results = peopleList.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.hair_color.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredList(results);\n        setSearchValue(e.target.value);\n    };\n    \n    const addToFav = (event, item) => {\n        event.stopPropagation();\n        setFavoritePeople(item);\n    }\n    const detailedHandler = (person) =>{\n        changeScreen(person);\n    }\n\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchData = async () =>{\n            try{\n                let result = await axios(`https://swapi.dev/api/people/`)\n                if(!mounted) return;\n                setPeopleList(result.data.results);\n                setFilteredList(result.data.results)\n                let count = 2;\n                while(result.data.next !== null){\n                    result = await axios(`https://swapi.dev/api/people/?page=${count}`)\n                    if( !mounted) return;\n                    setPeopleList(peopleList => peopleList.concat(result.data.results));\n                    setFilteredList(filteredList => filteredList.concat(result.data.results))\n                    count++;\n                }\n            } catch(e){\n                setError(e);\n                console.log(e)\n            }\n            setIsLoaded(false);\n        }\n        fetchData();\n        return () => {\n            mounted = false;\n        };\n    },[])\n    const cards = filteredList.map((item, index) =>(\n        <div className=\"card\" key={item.name+index} onClick={() => detailedHandler(item)}> \n            <h2>{item.name}</h2>\n            <p>Birth year: {item.birth_year}</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Hair color: {item.hair_color}</p>\n            <button onClick={(e)=>addToFav(e,item)}>Add to favorites</button>\n            {/* <button onClick={()=>removeFav(index+1)}>Remove fromfavorites</button> */}\n        </div>\n    ))\n\n    if(error)\n        return <div>{error}</div>\n\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else\n\n    return (\n        \n        <div className=\"list-component\">\n            <div className=\"search-wrapper\">\n                <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, birth year or skin color\" onChange={handleSearchValue} value={searchValue} />\n            </div>\n            <h2>All People</h2>\n            <div className=\"gallery\">{cards}</div>\n        </div>\n    )\n}\n\nexport default PeopleList;\n","import React, {useState, useEffect} from 'react'\n\nconst Favorites = ({changeScreen, favoritePeople, favoritePlanets, setFavoritePeople, setFavoritePlanets}) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [list, setList] = useState('all')\n    const [filteredPeople, setFilteredPeople] = useState([]);\n    const [filteredPlanets, setFilteredPlanets] = useState([]);\n    const [combinedList, setCombinedList] = useState([]);\n    const [filteredCombined, setFilteredCombined] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    console.log(favoritePlanets)\n    console.log(combinedList)\n    useEffect(()=>{\n        \n        setFilteredPeople(...filteredPeople, favoritePeople);\n        setFilteredPlanets(...filteredPlanets, favoritePlanets);\n        setCombinedList([...favoritePeople, ...favoritePlanets]);\n        setFilteredCombined([...favoritePeople, ...favoritePlanets]);\n    },[])\n    \n    const detailedHandler = (person) =>{\n        changeScreen(person);\n    }\n\n    const searchPeople = (e) => {\n        const results = favoritePeople.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.hair_color.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredPeople(results);\n        setSearchValue(e.target.value);\n    };\n    const searchPlanets = (e) => {\n        const results = favoritePlanets.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredPlanets(results);\n        setSearchValue(e.target.value);\n    };\n    const searchBoth = (e) => {\n        const results = combinedList.filter(item => {\n            console.log(item)\n            return (\n                \n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.skin_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.hair_color.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setCombinedList(results);\n        setSearchValue(e.target.value);\n    };\n    const removeFavPeople = (event,param) => {\n        event.stopPropagation();\n        let array = favoritePeople.filter(person => person.name !== param.name)\n        setFilteredPeople(array);\n        setFavoritePeople(array);\n    }\n    const removeFavPlanets = (event,param) => {\n        event.stopPropagation();\n        let array = favoritePlanets.filter(planet => planet.name !== param.name)\n        setFavoritePlanets(array);\n        setFilteredPlanets(array);\n    }\n    const peopleCards = filteredPeople.map((item, index) =>(\n        <div className=\"card\" key={item.name} onClick={() => detailedHandler(item)}>\n            <h2>{item.name}</h2>\n            <p>Birth year: {item.birth_year}</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Hair color: {item.hair_color}</p>\n            <button onClick={(e)=>removeFavPeople(e,item)}>Remove from favorites</button>\n        </div>\n    ))\n    const planetCards = filteredPlanets.map((item) =>(\n        <div className=\"card\" key={item.name}>\n            <h2>{item.name}</h2>\n            <p>Climate: {item.climate}</p>\n            <p>Terrain: {item.terrain}</p>\n            <p>Population: {item.population}</p>\n            <button onClick={(e)=>removeFavPlanets(e,item)}>Remove from favorites</button>\n\n        </div>\n    ));\n\n    const combinedCards = filteredCombined.map((item) =>{\n        if(item.terrain) return (\n            <div className=\"card\" key={item.name}>\n                <h2>{item.name}</h2>\n                <p>Climate: {item.climate}</p>\n                <p>Terrain: {item.terrain}</p>\n                <p>Population: {item.population}</p>\n                <button onClick={(e)=>removeFavPlanets(e,item)}>Remove from favorites</button>\n            </div>\n        )\n        else return (\n            <div className=\"card\" key={item.name} onClick={() => detailedHandler(item)}>\n            <h2>{item.name}</h2>\n            <p>Birth year: {item.birth_year}</p>\n            <p>Eye color: {item.eye_color}</p>\n            <p>Hair color: {item.hair_color}</p>\n            <button onClick={(e)=>removeFavPeople(e,item)}>Remove from favorites</button>\n            </div>\n        )\n    });\n\n    if(error)\n        return <div className=\"list-component\">{error}</div>\n    \n    else if(isLoaded === true)\n        return <div className=\"loader\"></div>\n\n    else if(favoritePeople.length === 0 && favoritePlanets.length === 0)\n    return (\n        <div className=\"list-component\">\n            <h1>You currently have no favorites</h1>\n        </div>\n    )\n    \n    else {\n        if(list === 'people' )\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, birth year or skin color\" onChange={searchPeople} value={searchValue} />\n                    </div>\n                    <h1>Your favorite</h1>\n                    <div>\n                        <h2>People</h2>\n                        <div className=\"gallery\">{peopleCards}</div>\n                    </div>\n                </div>\n            )\n        else if(list === 'planets')\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, terrain or climate\" onChange={searchPlanets} value={searchValue} />\n                    </div>\n                    <h1>Your favorites</h1>\n                    <div>\n                        <h2>Planets</h2>\n                        <div className=\"gallery\">{planetCards}</div>\n                    </div>\n                </div>\n            )\n        else if(list === 'all')\n            return (\n                <div className=\"list-component\">\n                    <button onClick={() => setList('all')}>List all</button>\n                    <button onClick={() => setList('people')}>List people</button>\n                    <button onClick={() => setList('planets')}>List planets</button>\n                    <div className=\"search-wrapper\">\n                        <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, birth year or skin color\" onChange={searchBoth} value={searchValue} />\n                    </div>\n                    <h1>Your favorites</h1>\n                    <div>\n                        <h2>People & Planets</h2>\n                        <div className=\"gallery\">{combinedCards}</div>\n                        </div>\n                </div>\n            )\n    }\n}\n\nexport default Favorites\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst PlanetList = ({setFavoritePlanets}) => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [planetList, setPlanetList] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [filteredList, setFilteredList] = useState([])\n\n    const handleSearchValue = (e) => {\n        const results = planetList.filter(item => {\n            return (\n                item.name.toLowerCase().includes(e.target.value.toLowerCase())|| \n                item.terrain.toLowerCase().includes(e.target.value.toLowerCase()) ||\n                item.climate.toLowerCase().includes(e.target.value.toLowerCase())\n            );\n        });\n        setFilteredList(results);\n        setSearchValue(e.target.value);\n    };\n    const detailedHandler = (planet) =>{\n    }\n    \n    const addToFav = (event, planet) => {\n        event.stopPropagation();\n        setFavoritePlanets(planet);\n    }\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchData = async () =>{\n            try{\n                let result = await axios(`https://swapi.dev/api/planets/`)\n                if(!mounted) return;\n                setPlanetList(result.data.results);\n                setFilteredList(result.data.results)\n                let count = 2;\n                while(result.data.next !== null){\n                    result = await axios(`https://swapi.dev/api/people/?page=${count}`)\n                    if(!mounted) return;\n                    setPlanetList(planetList => planetList.concat(result.data.results));\n                    setFilteredList(filteredList => filteredList.concat(result.data.results))\n                    count++;\n                }\n            } catch(e){\n                setError(e);\n            }\n            setIsLoaded(false);\n        }\n        fetchData();\n        return () => {\n            mounted = false;\n        };\n    },[])\n    const cards = filteredList.map((item, index) =>(\n        <div className=\"card\" key={item.name+index} onClick={()=>detailedHandler(item)}>\n            <section>\n                <h2>{item.name}</h2>\n                <p>Climate: {item.climate}</p>\n                <p>Terrain: {item.terrain}</p>\n                <p>Population: {item.population}</p>\n            </section>        \n            <button onClick={(e)=>addToFav(e,item)}>Add to favorites</button>\n        </div>\n    ))\n\n    if(error)\n        return <div>{error}</div>\n\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else\n        return (\n            <div className=\"list-component\">\n                <div className=\"search-wrapper\">\n                    <input className=\"search-input\" type=\"text\" placeholder=\"Search on name, climate or terrain\" onChange={handleSearchValue} value={searchValue} />\n                </div>\n                <h2>All Planets</h2>\n                <div className=\"gallery\">{cards}</div>\n            </div>\n        )\n}\n\nexport default PlanetList\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nconst DetailedView = ({person}) => {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState();\n    const [homeWorld, setHomeWorld] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    useEffect(()=>{\n        let mounted = true;\n        setIsLoaded(true);\n        const fetchHomeWorld = async () =>{   \n            try{     \n                let result = await axios(person.homeworld);\n                if(!mounted) return;\n                setHomeWorld(result.data.name)\n            }\n            catch(e){\n                setError(e);\n                console.log(error)\n            }\n            setIsLoaded(false);\n        }\n        fetchHomeWorld();\n        return () => {\n            mounted = false;\n        };\n    },[])\n    \n    useEffect(()=>{\n        let mounted = true;\n        const fetchMovies = async () =>{   \n            try{     \n                for(let i = 0; i < person.films.length; i++){ \n                    let result = await axios(person.films[i]);\n                    if(!mounted) return;\n                    setMovies(movies => movies.concat(result.data.title));\n                }\n            }\n            catch(e){\n                setError(e);\n            }\n            setIsLoaded(false);\n        }\n        fetchMovies();\n        return () => {\n            mounted = false;\n        };\n    },[])\n\n    const movieList = movies.map(movie =>(\n        <p key={movie}>{movie}</p>\n    ))\n    if(error)\n        return <div>{error}</div>\n    if(isLoaded === true)\n        return <div className=\"loader\"></div>\n    else\n        return (\n            <div className=\"detailed-card\">\n                <h2>{person.name}</h2>\n                <div className=\"detailed-grid\">\n                    <div>Birth year: <p>{person.birth_year}</p></div>\n                    <div>Height: <p>{person.height}</p></div>\n                    <div>Hair color: <p>{person.hair_color}</p></div>\n                    <div>Eye color: <p>{person.eye_color}</p></div>\n                    <div>Skin color: <p>{person.skin_color}</p></div>\n                    <div>Gender: <p>{person.gender}</p></div>\n                    <div>Mass: <p>{person.mass}</p></div>\n                    <div>Homeworld: <p>{homeWorld}</p></div>\n                    <div>Movies: <div>{movieList}</div></div>\n                </div>\n                \n            </div>\n        )\n}\nexport default DetailedView;\n","import React, {useState, useEffect} from 'react'\n\nconst Create = ({setFavoritePeople}) => {\n    const [created, setCreated] = useState([]);\n    const [touched, setTouched] = useState(false);\n\n    let cssClass = '';\n\n    const isValidNumber = x => {\n        let maybeNumber = x - 0;\n        return !isNaN(maybeNumber);\n    }\n\n\n    if( touched ) {\n        if( isValidNumber() )\n            cssClass = 'valid';\n        else\n            cssClass = 'invalid';\n    }\n    return (\n        <div className=\"detailed-card\">\n            <p>\n                Please enter a number: <br/>\n                <input type=\"text\"\n                    value={created}\n                    className={cssClass}\n                    onChange={event => setCreated(event.target.value)}\n                    onBlur={event => setTouched(true)} /> <br/>\n            </p>\n            <button>Submit</button>\n        </div>\n    )\n}\nexport default Create;\n","import React, {useState} from 'react';\nimport Welcome from './components/Welcome'\nimport './App.css';\nimport PeopleList from './components/PeopleList';\nimport Favorites from './components/Favorites';\nimport PlanetList from './components/PlanetList';\nimport DetailedView from './components/DetailedView';\nimport Create from './components/Create';\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('peopleScreen');\n  const [detailedPerson, setDetailedPerson] = useState(null);\n  const [favoritePeople, setFavoritePeople] = useState([]);\n  const [favoritePlanets, setFavoritePlanets] = useState([]);\n\n  let content= null;\n  switch(currentScreen){\n    case 'welcomeScreen':\n      content = (\n        <Welcome changeScreen={() => setCurrentScreen('peopleScreen')}></Welcome>\n      )\n      break;\n    case 'peopleScreen':\n      content = (\n        <PeopleList changeScreen={(param) => {setCurrentScreen('detailedScreen'); setDetailedPerson(param)}} setFavoritePeople={(person) => {setFavoritePeople(favoritePeople => favoritePeople.concat(person))}}></PeopleList>\n      )\n      break;\n    case 'favoriteScreen':\n      content = (\n        <Favorites changeScreen={(param) => {setCurrentScreen('detailedScreen'); setDetailedPerson(param)}} favoritePeople={favoritePeople} favoritePlanets={favoritePlanets} setFavoritePeople={(param) => {setFavoritePeople(param)}} setFavoritePlanets={(planet) => {setFavoritePlanets(planet)}} ></Favorites>\n      )\n      break;\n    case 'planetScreen':\n      content = (\n        <PlanetList setFavoritePlanets={(planet) => {setFavoritePlanets(favoritePlanets =>  favoritePlanets.concat(planet))}}></PlanetList>\n      )\n      break;\n    case 'detailedScreen':\n      content = (\n        <DetailedView person={detailedPerson}></DetailedView>\n      )\n      break;\n    case 'createScreen':\n        content = (\n          <Create setFavoritePeople={(person) => {setFavoritePeople(favoritePeople => favoritePeople.concat(person))}}></Create>\n        )\n        break;\n    default:\n      break;\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"nav-bar\">\n        <button onClick={() => setCurrentScreen('favoriteScreen')}>My favorites</button>\n        <button onClick={() => setCurrentScreen('peopleScreen')}>List people </button>\n        <button onClick={() => setCurrentScreen('planetScreen')}>List planets </button>\n        <button onClick={() => setCurrentScreen('createScreen')}>Add</button>\n        </div>\n      </header>\n      <main>\n        {content}\n      </main>\n      <span></span>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}